<?xml version="1.0" encoding="UTF-8"?>

<!-- DTD Hibernate -->
<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

			<!-- VERSION HIBERNATE : 3.6.3 Final -->
        
        <!-- =========================================== -->
		<!-- DOIT ETRE SITUE SOUS LA RACINE DU CLASSPATH -->
		<!-- POUR QU' Hibernate LE TROUVE AU DEMARRAGE.  -->
		
		<!-- ATTENTION -->
		<!-- Vous devez CREER MANUELLEMENT LA BASE D'ABORD. -->
		<!-- (CREATE DATABASE xxx WITH OWNER = postgres		-->	
	    <!-- ENCODING = 'UTF8' sous postgres par exemple).	-->    
		<!-- =============================================	-->   
		

<!-- INDIQUE QUE LA PERSISTENCE EST REALISEE PAR HIBERNATE -->
<hibernate-configuration>

	<session-factory>
	
		<!-- ================================================== -->
		<!--  Paramètres de connexion JDBC à la base de données -->
		<!-- ================================================== -->

		
			<!-- ************************* -->
			<!-- Driver de Base de données -->
			<!-- ************************* -->
        
		<!-- MySql -->
		<!-- <property name="hibernate.connection.driver_class">
		com.mysql.jdbc.Driver</property> -->
				
		<!-- HsqlDB -->
		<!-- <property name="hibernate.connection.driver_class">
		org.hsqldb.jdbcDriver</property> -->
		
		<!-- postgresql -->
		<property name="hibernate.connection.driver_class">
			org.postgresql.Driver
		</property>

		
			<!-- ***************************** -->
    		<!-- Connexion à la Base du projet -->
    		<!-- ***************************** -->
    		
    	<!-- MySql -->	
		<!--  <property name="hibernate.connection.url">
		jdbc:mysql://localhost/xxx</property>-->
		
		<!-- HsqlDB -->	
		<!--  <property name="hibernate.connection.url">
		jdbc:hsqldb:hsql://localhost:3306/xxx</property>-->
				
		<!-- postgresql -->
		<property name="hibernate.connection.url">
			jdbc:postgresql://localhost:5432/tuto_web_jee1.8.144
		</property>



	

			<!-- ========================================================= -->
			<!--                             DIALECT                       -->
			<!-- ========================================================= -->
			<!-- Dialecte que doit utiliser Hibernate pour communiquer 	   -->
			<!-- avec la BD de l'application.  							   -->
			<!-- ========================================================= -->
		    <!--                     hsqldb 2.4.0                          -->
		    <!-- ========================================================= -->
			<property name="hibernate.dialect">org.hibernate.dialect.HSQLDialect</property>
			
		    <!-- ========================================================= -->
		    <!--    postgresql 9.6.4 - port : 5432 - [postgres, postgres]  -->
		    <!-- ========================================================= -->
<!--     		<property name="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</property> -->
    		
		    <!-- ========================================================= -->
		    <!--         mySql 5.7.19.0 - port : 3306 - [root, root]       -->
		    <!-- ========================================================= -->   	
<!-- 			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQL57Dialect" /> -->
	


			<!-- ******************* -->
			<!-- Login, Mot de Passe -->
			<!-- ******************* -->
		
		<!-- MySql -->	
    	<!-- <property name="hibernate.connection.username">
    	root</property> -->
    	<!-- <property name="hibernate.connection.password"></property> -->
    	
    	<!-- HsqlDB -->	
    	<!-- <property name="hibernate.connection.username">
    	sa</property> -->
    	<!-- <property name="hibernate.connection.password"></property> -->
    	    	
    	<!-- postgresql -->
		<property name="hibernate.connection.username">postgres</property>
		<property name="hibernate.connection.password">postgres</property>

		

			<!-- ************************** -->
		<!-- Désactive le cache de second niveau -->
			<!-- ************************** -->
		<property name="cache.provider_class">
			org.hibernate.cache.NoCacheProvider
		</property>	


			<!-- ************************** -->
		<!-- ACTIVATION DU CACHE DE SECOND NIVEAU 
		Easy Hibernate Cache (EhCache)-->
		<!-- (classe EhCacheProvider contenue dans ehcache-1.3.0.jar) -->
			<!-- ************************** -->		
<!-- 		<property name="hibernate.cache.provider_class"> -->
<!-- 			net.sf.ehcache.hibernate.EhCacheProvider -->
<!-- 		</property> -->
<!-- 		<property name="hibernate.cache.use_second_level_cache"> -->
<!-- 			true -->
<!-- 		</property> -->
<!-- 		<property name="hibernate.cache.use_query_cache"> -->
<!-- 			true -->
<!-- 		</property> -->
<!-- 		<property name="net.sf.ehcache.configurationResourcename"> -->
<!-- 			ehcache.xml -->
<!-- 		</property>	 -->


		
			<!-- ***************** -->
			<!-- Pool de Connexion -->
			<!-- ***************** -->
			                
        <!-- Pool de connection (interne) -->
        <property name="connection.pool_size">10</property>
        
		<!-- Utilisation éventuelle du pool de connexion d'Hibernate 
				tierce partie c3po (inutile en production) -->
		<!--
			<property name="c3p0.minPoolSize">5</property>
			<property name="c3p0.maxPoolSize">20</property>
			<property name="c3p0.timeout">1800</property>
			<property name="c3p0.max_statement">50</property>
		-->


			<!-- ========================================================= -->
			<!--         STRATEGIE DE CONSERVATION DES TABLES              -->
			<!-- PASSER EN validate pour la PROD.						   -->
			<!-- * none (default) : No action will be performed.           -->
			<!-- * create-only : Database creation will be generated.      -->
			<!-- * drop : Database dropping will be generated.             -->
			<!-- * create : Database dropping puis database creation.      -->
			<!-- * create-drop : Drop + create on startup. drop à la fin.  -->
			<!-- * validate : Validate the database schema.                -->
			<!-- * update : Update the database schema.                    -->						   
			<!-- ========================================================= -->
			<!-- ******************************************** 	-->
	    	<!-- Comportement pour la conservation des tables 	-->
	    	<!-- PASSER EN update pour la PROD.					-->
			<!-- ******************************************** 	-->		

			<!-- Recrée le schéma à chaque démarrage. Drop à la fermeture -->
<!-- 			 <property name="hibernate.hbm2ddl.auto" value="create-drop" /> -->
			
			<!-- Supprime et re-créée le schéma de base de données au démarrage -->
<!-- 			<property name="hbm2ddl.auto"  value="create" /> -->
		
			<!-- Met à jour le schéma (pas de destruction). PROD. -->
<!--  			<property name="hibernate.hbm2ddl.auto" value="update" /> -->
		
		<property name="hibernate.hbm2ddl.auto">create</property> 

		
			<!-- ************************** -->
			<!-- pour voir les requetes SQL -->
			<!-- ************************** -->

        <!-- Montrer toutes les réquêtes générées -->
<!--         <property name="show_sql">false</property> -->
        <property name="show_sql">true</property>
         <!-- Formater le SQL de sortie -->
		<property name="hibernate.format_sql">true</property>
		<!-- faciliter le débogage du SQL -->
		<property name="hibernate.use_sql_comments">true</property>


			<!-- ************************** -->
		<!-- Gestion automatique du Contexte de Session -->
			<!-- ************************** -->
        <!-- Enable Hibernate's automatic session context management -->
        <property name="current_session_context_class">thread</property>
		

       
		<!-- *************************************** -->
		<!-- Pour générer des statistiques Hibernate -->
		<!-- *************************************** -->
        <property name="hibernate.generate_statistics">true</property>
        
 
 
        
 			<!-- ******************************************** -->
			<!--                MAPPING FILES                 -->
			<!-- Déclaration des Objets métier persistants.   -->
			<!-- ******************************************** -->
			
			<!-- ATTENTION !!! mettre mapping class="le chemin java 
			d'une classe java" lorsque l'on utilise les annotations. -->
			

			<!-- ATTENTION !!! mettre 
			mapping resource="le chemin dos des hbm.xml 
			avec / " si l'on utilise les hbm.xml. -->

		
			<!-- ATTENTION !!! l'ordre de déclaration des ressources -->
			<!-- mappées ne compte pas car Hibernate commence par lire-->
			<!-- le présent hibernate.cfg.xml, puis les  -->
		 	<!-- valueobject.hbm.xml. les tables correspondant aux -->
		 	<!-- valueobjects seront donc créées en premier. -->
		 	<!-- les tables d'association n'interviennent qu'ensuite. -->
		
		<!-- ********************************************************   --> 	
		<!-- 					AVEC LES ANNOTATIONS 					-->
		<!-- ********************************************************   --> 
		<!-- AbstractClient -->
		<mapping class
		 ="levy.daniel.application.model.metier.client.AbstractClient" />
		 <mapping class
		 ="levy.daniel.application.model.metier.client.impl.Client" /> 
		 <mapping class
		 ="levy.daniel.application.model.metier.client.impl.ClientACommandes" /> 
		 
		 <mapping class
		 ="levy.daniel.application.model.metier.commande.AbstractCommande" /> 
		 <mapping class
		 ="levy.daniel.application.model.metier.commande.impl.Commande" />  



	</session-factory>
	
</hibernate-configuration>
